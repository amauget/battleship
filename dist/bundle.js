(()=>{var e={208:(e,n,t)=>{"use strict";t.d(n,{A:()=>m});var r=t(354),i=t.n(r),o=t(314),a=t.n(o),A=t(417),s=t.n(A),l=new URL(t(737),t.b),d=new URL(t(973),t.b),c=new URL(t(270),t.b),h=a()(i()),g=s()(l),p=s()(d),u=s()(c);h.push([e.id,`@font-face {\n  font-family: 'typeWriter';\n  src: url(${g}) format('opentype');\n  font-weight: bolder;\n  font-style: normal;\n}\n:root{\n  margin:0;\n  padding:0;\n  box-sizing: border-box;\n  cursor: crosshair;\n  /* font-family: 'typeWriter'; */\n  font-weight: 100;\n}\nbody{\n  display: grid;\n  grid-template-rows: repeat(3, auto) 3rem;\n  grid-template-columns: auto, min-content;\n  justify-content: center;\n  gap:1vh;\n  font-family: 'typeWriter';\n  background-image: url(${p});\n  background-repeat: no-repeat;\n  background-size: 100%;\n  background-position-y: 50%;\n}\na{\n  grid-row: 1/2;\n  grid-column: 1/2;\n  font-size: 1.2rem;\n  justify-self: center;\n  text-decoration: none;\n  font-family:'typeWriter' ;\n  border: none;\n  background: navy;\n  color:white;\n  border-radius: 15px;\n  padding:.5rem;\n\n}\na:hover{\n  animation: hover .2s ease-in;\n  background: white;\n  color:navy;\n  cursor: pointer;\n}\n\n@keyframes hover{\n  0%{\n    background: navy;\n    color: white\n  }\n  50%{\n    background: rgb(133, 133, 248);\n    color: rgb(182, 182, 250);\n  }\n  100%{\n    background: white;\n    color:navy;\n  }\n}\n.header{\n  grid-row: 1/2;\n  grid-column: 1/3;\n  display: grid;\n  justify-content: center;\n\n  /* background-image: url(./jsImports/externalItems/battleship.jpg); */\n  background-repeat: no-repeat;\n  background-position-y: 15%;\n  \n}\n.header>h1{\n  grid-row: 1/2;\n  grid-column: 1/2;\n  color:rgb(253, 253, 253);\n  margin: 0;\n  align-self: end;\n  justify-self: center;\n  font-family: 'typeWriter';\n}\n.battleshipImg{\n  grid-row: 1/2;\n  grid-column: 1/2;\n  width:50vw;\n  max-width: 600px;\n  z-index: -1000\n}\n#alert{ /* both welcome and alert are different id's for alert window */\n  position:fixed;\n  bottom:50;\n  right: 5vw;\n}\n#welcome,  #openFire{\n  grid-column: 1/3;\n  grid-row: 2/3;\n  text-align: center;\n  animation: expand .5s ease-in; /* keyframes located at bottom */\n}\n#openFire{\n  width: 25vw;\n}\n.alert{\n\n  z-index: 2;\n  border: solid 1px black;\n  background-color:#f6eee3;\n  justify-self: center;\n  align-self: center;\n\n\n  display: grid;\n  grid-template-columns: auto min-content;\n  grid-template-rows:repeat(4, min-content);\n\n  max-width: 40vw;\n  max-height: 45vh;\n  \n  height: fit-content;\n  font-family: 'typeWriter';\n  min-height: fit-content;\n\n\n}\n.admiral{\n  grid-column: 2/3;\n  grid-row: 1/3;\n  height:13rem;\n  width: auto;\n\n}\n.command{\n  grid-row: 1/2;\n  grid-column: 1/2;\n  font-size: 2rem;\n  font-weight: bold;\n  margin-bottom: 0;\n  margin-left: 1rem;\n  justify-self: center;\n  text-align: center;\n}\n.message{\n  grid-column: 1/2;\n  grid-row: 2/3;\n  margin: 0;\n  margin-left: 1rem;\n  margin-right: 1rem;\n  text-align: center;\n  font-size: 1.5rem;\n}\n.hintContainer{\n  width:100%;\n  margin-top:2vh;\n  margin-left: 1vw;\n  display:grid;\n  grid-row: auto;\n  grid-column: auto;\n}\n.hint{\n  grid-row: 1/2;\n  grid-column: 2/3;\n  justify-self: center;\n  margin-left: 1rem;\n  font-size: 1rem;\n  font-weight: bold;\n  align-self: center;\n}\n.mouseIcon{\n  grid-column: 1/2;\n  grid-row: 1/2;\n  width: 5vw;\n  height:auto;\n  border-radius: 15%;\n}\n.okay{\n  grid-row: 5/6; \n  grid-column: 1/3;\n  justify-self: center;\n\n  height: 2.5rem;\n  width: 10rem;\n  font-size: 1.2rem;\n  border-radius: 15px;\n  border: none;\n  background-color: navy;\n  \n  font-family: 'typeWriter';\n  color: white;\n  align-self: end;\n  margin-bottom: 1rem;\n}\n.okay:hover{\n  background-color: rgba(0, 0, 128, 0.605);\n  cursor: pointer;\n}\n.opponentBoard{\n  grid-row: 2/3;\n  grid-column: 1/2;\n  background-image: url(${u});\n  background-size: 100%;\n  background-repeat: no-repeat;\n}\n.playerBoardContainer, .opponentBoardContainer{\n\n  display:grid;\n  grid-template-rows: repeat(2, min-content);\n  grid-template-columns: repeat(3, fit-content);\n  /* padding: 20px; */\n  align-self: end;\n}\n.playerBoardContainer{\n  grid-row: 2/3;\n  grid-column: 2/3;\n  padding-right: 5rem\n}\n.opponentBoardContainer{\n  grid-row: 2/3;\n  grid-column: 1/2;\n  margin-left: 1rem;\n}\nh4{\n  grid-row: 1/2;\n  grid-column: 1/3;\n  font-size: 2rem;\n  justify-self: center;\n  margin:5px;\n\n}\n.letterCoordinates{\n  grid-row: 2/3;\n  grid-column: 1/2;\n  display: grid;\n  height:100%;\n  grid-template-rows: repeat(10, auto);\n  gap:0;\n  font-size: 1.5rem;\n}\n.numberCoordinates{\n  grid-row: 3/4;\n  grid-column: 1/3;\n  display: grid;\n  grid-template-columns: repeat(11, auto);\n  font-size: 1.5rem;\n}\n.playerBoard{\n  grid-row: 2/4;\n  grid-column: 2/3;\n  \n  background-image: url(https://images.pexels.com/photos/5326990/pexels-photo-5326990.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1);\n  background-size: 100%;\n}\n.opponentBoard{\n  grid-row: 2/4;\n  grid-column: 2/3;\n \n}\n\n.playerBoard, .opponentBoard{\n  display: grid;\n  grid-template-rows:repeat(10, fit-content);\n  justify-self: end;\n  justify-content: center;\n  gap:0;\n  height: fit-content;\n  width: fit-content;\n\n}\n\n#x{\n  background-color: rgba(255, 0, 0, 0.276);\n}\n\n#row{\n  display: grid;\n  grid-template-columns: repeat(10, auto);\n  gap:0\n}\n/*row is id */\n.nine{ grid-row: 1;} .eight{grid-row: 2;}\n.seven{grid-row: 3;} .six{grid-row: 4;} .five{grid-row: 5;}\n.four{grid-row: 6;} .three{grid-row: 7;} .two{grid-row: 8;}\n.one{grid-row: 9;} .zero{grid-row: 10;}\n\n.cell, .coord{\n  border:solid .1px black;\n  height: 3rem;\n  width: 3rem;\n  justify-self: center;\n  color: none;\n\n}\n.cell{\n  position: relative;\n  display: grid;\n  text-align: center;\n  justify-content: center;\n}\n.marker{\n  position: absolute;\n  /* left:0;\n  bottom: 10px; */\n  font-size: 3rem;\n  margin:0;\n  text-align: center;\n  z-index: 2;\n  transform: rotate(180deg);\n  justify-self: center ;\n\n}\n#markerWithShip{ /* see DOM.js appendMarker() for class marker class switch */\n  transform: rotate(-270deg);\n\n  justify-self: center;\n  align-self: center;\n  \n  \n}\n.cell>.ship{\n  position: static;\n  z-index: 1;\n  background-color: none;\n  \n}\n\n.coord{\n  padding-top: .25vh;\n  border:  none;\n  text-align: center;\n  font-weight: bold;\n  justify-self: center;\n  align-self: center;\n}\n.sideBar{\n  grid-row: 2/3;\n  grid-column: 3/4;\n\n  justify-self: center;\n\n  display:grid;\n  grid-template-rows: repeat(2, fit-content);\n  grid-template-columns: 25rem;\n  margin-left: 20px;\n  \n  font-size: 1.4rem;\n  background-color: rgb(204, 204, 204);\n  border: 2px solid black;\n}\n\n.hitLogShowing{\n  grid-column: 3/4;\n  grid-row:2/4;\n  z-index: 1;\n\n  display:grid;\n  grid-template-rows: min-content 70vh;\n  height:85vh;\n  width: fit-content;\n  min-width: 150px;\n  margin-right: 20px;\n  text-align: center;\n  align-self: center;\n  justify-self: center;\n\n  \n  background-color: #f6eee3;\n  border: 1px solid black;\n  \n  animation: expand 1s ease-in-out;\n  overflow-y: auto;\n\n}\n@keyframes expand{\n  0% {\n    transform: scaleX(0);\n  }\n\n  70% {\n    transform: scaleX(1.1);\n  }\n  \n  100% {\n    transform: scaleX(1);\n  }\n}\n\n.title{ /* for .hitLog */\n  font-size:2rem;\n  text-align: center;\n  grid-row: 1/2;\n  display:none;\n  top:0;\n  padding-left: 3rem;\n  padding-right: 3rem;\n\n}\n.hitLogShowing>.listContainer{\n  grid-row: 2/4;\n  text-decoration: none;\n  list-style: none;\n  font-size: 1.5rem;\n  word-wrap: break-word;\n}\n.list{\n  padding:10px;\n  margin-top:.25rem;\n  font-size: 1.2rem;\n  /* animation: expand .25s ease-in-out; */\n}\n.toggle{\n  grid-row: 1/2;\n  grid-column: 1/3;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 1rem\n}\n.sideBar .ships{\n  width: 8rem;\n  justify-self: center;\n  display: grid;\n  grid-template-rows: repeat(5, 10vh);\n  grid-template-columns: repeat(1, min-content);\n  align-self: start;\n  list-style: none;\n}\n.ships> img{\n  transform: rotate(90deg);\n  margin:0;\n  border-radius: 15px;\n\n  align-self: center;\n  justify-self: center;\n}\n\n.ship:hover{\n  background-color: rgba(16, 0, 241, 0.459);\n}\n\n/* cell height/width = 3.5 rem */\n#carrier{  /* 5:1 height */\n  height: 15rem;\n  width: 3rem;\n  grid-row: 1/2;\n  grid-column: 1/2;\n  background: rgb(255, 0, 0, 0.275)\n}\n\n#battleship{ /*4:1  */\n  height: 12rem;\n  width: 2.7rem;\n\n  grid-row: 2/3;\n  grid-column: 1/2;\n}\n#cruiser, #submarine{ /* 3:1 */\n  height: 9rem;\n  width: 2.3rem;\n}\n\n#submarine{\n  grid-row: 3/4;\n}\n#cruiser{\n  grid-row: 4/5;\n}\n#destroyer{ /* 2:1 */ \n  height: 6rem;\n  width: 1.7rem;\n  grid-row: 5/6;\n}\n.cell>#destroyer{\n  padding-left: 1rem;\n}\n.cell>.ship{\n  padding-left: 1rem;\n\n  /* margin-left: .5rem; */\n}\n#bottomBtn{\n  align-self: top;\n  justify-self: center;\n  width:30%;\n  padding:0;\n}\n.startGame{\n  grid-row: 4/5;\n  grid-column: 1/2;\n}\n\n.resetPieces{\n  grid-row: 4/5;\n  grid-column: 2/3;\n  /* justify-self: start; */\n}\n.resetPieces{\n  padding:1rem;\n}\n.startGame, .resetPieces, .orient{\n  font-size: 1.5rem;\n  background-color: rgb(255, 255, 255);\n\n  border:none;\n  border-radius: 15px;\n  width: 12rem;\n  font-family: 'typeWriter';\n}\n.orient{\n  width: 9rem;\n \n}\n.startGame:hover, .resetPieces:hover, .orient:hover{\n  cursor: pointer;\n  background-color: rgb(183, 182, 182);\n}\n\n.playAgain{\n  grid-row: 4/5;\n  grid-column: 1/3;\n\n  justify-self: center;\n\n  border-radius: 15px;\n  width:12rem;\n  \n  animation: colorChange 3s ease-in-out;\n  animation-iteration-count: infinite;\n\n  font-family: 'typeWriter';\n  font-size: 1.5rem;\n\n}\n.playAgain:hover{\n  background-color: white;\n  \n  cursor: pointer;\n  border: 1.5px solid rgb(109, 109, 109);\n  transition: border.5s ease;\n}\n@keyframes colorChange {\n  0%{\n    background-color: rgb(0, 71, 133);\n    color: white;\n  }\n  50%{\n    background-color: rgb(131, 197, 255);\n    color: rgb(77, 76, 76)\n  }  \n  100%{\n    background-color: rgb(255, 255, 255);\n    color: rgb(0, 0, 0);\n  }\n}\n@keyframes slide{\n  0%{\n    margin-right: -100vw;\n  }\n  100%{\n    margin-right:0;\n  }\n}\n\n\n`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,yBAAyB;EACzB,+DAA6E;EAC7E,mBAAmB;EACnB,kBAAkB;AACpB;AACA;EACE,QAAQ;EACR,SAAS;EACT,sBAAsB;EACtB,iBAAiB;EACjB,+BAA+B;EAC/B,gBAAgB;AAClB;AACA;EACE,aAAa;EACb,wCAAwC;EACxC,wCAAwC;EACxC,uBAAuB;EACvB,OAAO;EACP,yBAAyB;EACzB,yDAAuD;EACvD,4BAA4B;EAC5B,qBAAqB;EACrB,0BAA0B;AAC5B;AACA;EACE,aAAa;EACb,gBAAgB;EAChB,iBAAiB;EACjB,oBAAoB;EACpB,qBAAqB;EACrB,yBAAyB;EACzB,YAAY;EACZ,gBAAgB;EAChB,WAAW;EACX,mBAAmB;EACnB,aAAa;;AAEf;AACA;EACE,4BAA4B;EAC5B,iBAAiB;EACjB,UAAU;EACV,eAAe;AACjB;;AAEA;EACE;IACE,gBAAgB;IAChB;EACF;EACA;IACE,8BAA8B;IAC9B,yBAAyB;EAC3B;EACA;IACE,iBAAiB;IACjB,UAAU;EACZ;AACF;AACA;EACE,aAAa;EACb,gBAAgB;EAChB,aAAa;EACb,uBAAuB;;EAEvB,qEAAqE;EACrE,4BAA4B;EAC5B,0BAA0B;;AAE5B;AACA;EACE,aAAa;EACb,gBAAgB;EAChB,wBAAwB;EACxB,SAAS;EACT,eAAe;EACf,oBAAoB;EACpB,yBAAyB;AAC3B;AACA;EACE,aAAa;EACb,gBAAgB;EAChB,UAAU;EACV,gBAAgB;EAChB;AACF;AACA,QAAQ,+DAA+D;EACrE,cAAc;EACd,SAAS;EACT,UAAU;AACZ;AACA;EACE,gBAAgB;EAChB,aAAa;EACb,kBAAkB;EAClB,6BAA6B,EAAE,gCAAgC;AACjE;AACA;EACE,WAAW;AACb;AACA;;EAEE,UAAU;EACV,uBAAuB;EACvB,wBAAwB;EACxB,oBAAoB;EACpB,kBAAkB;;;EAGlB,aAAa;EACb,uCAAuC;EACvC,yCAAyC;;EAEzC,eAAe;EACf,gBAAgB;;EAEhB,mBAAmB;EACnB,yBAAyB;EACzB,uBAAuB;;;AAGzB;AACA;EACE,gBAAgB;EAChB,aAAa;EACb,YAAY;EACZ,WAAW;;AAEb;AACA;EACE,aAAa;EACb,gBAAgB;EAChB,eAAe;EACf,iBAAiB;EACjB,gBAAgB;EAChB,iBAAiB;EACjB,oBAAoB;EACpB,kBAAkB;AACpB;AACA;EACE,gBAAgB;EAChB,aAAa;EACb,SAAS;EACT,iBAAiB;EACjB,kBAAkB;EAClB,kBAAkB;EAClB,iBAAiB;AACnB;AACA;EACE,UAAU;EACV,cAAc;EACd,gBAAgB;EAChB,YAAY;EACZ,cAAc;EACd,iBAAiB;AACnB;AACA;EACE,aAAa;EACb,gBAAgB;EAChB,oBAAoB;EACpB,iBAAiB;EACjB,eAAe;EACf,iBAAiB;EACjB,kBAAkB;AACpB;AACA;EACE,gBAAgB;EAChB,aAAa;EACb,UAAU;EACV,WAAW;EACX,kBAAkB;AACpB;AACA;EACE,aAAa;EACb,gBAAgB;EAChB,oBAAoB;;EAEpB,cAAc;EACd,YAAY;EACZ,iBAAiB;EACjB,mBAAmB;EACnB,YAAY;EACZ,sBAAsB;;EAEtB,yBAAyB;EACzB,YAAY;EACZ,eAAe;EACf,mBAAmB;AACrB;AACA;EACE,wCAAwC;EACxC,eAAe;AACjB;AACA;EACE,aAAa;EACb,gBAAgB;EAChB,yDAAiD;EACjD,qBAAqB;EACrB,4BAA4B;AAC9B;AACA;;EAEE,YAAY;EACZ,0CAA0C;EAC1C,6CAA6C;EAC7C,mBAAmB;EACnB,eAAe;AACjB;AACA;EACE,aAAa;EACb,gBAAgB;EAChB;AACF;AACA;EACE,aAAa;EACb,gBAAgB;EAChB,iBAAiB;AACnB;AACA;EACE,aAAa;EACb,gBAAgB;EAChB,eAAe;EACf,oBAAoB;EACpB,UAAU;;AAEZ;AACA;EACE,aAAa;EACb,gBAAgB;EAChB,aAAa;EACb,WAAW;EACX,oCAAoC;EACpC,KAAK;EACL,iBAAiB;AACnB;AACA;EACE,aAAa;EACb,gBAAgB;EAChB,aAAa;EACb,uCAAuC;EACvC,iBAAiB;AACnB;AACA;EACE,aAAa;EACb,gBAAgB;;EAEhB,sIAAsI;EACtI,qBAAqB;AACvB;AACA;EACE,aAAa;EACb,gBAAgB;;AAElB;;AAEA;EACE,aAAa;EACb,0CAA0C;EAC1C,iBAAiB;EACjB,uBAAuB;EACvB,KAAK;EACL,mBAAmB;EACnB,kBAAkB;;AAEpB;;AAEA;EACE,wCAAwC;AAC1C;;AAEA;EACE,aAAa;EACb,uCAAuC;EACvC;AACF;AACA,aAAa;AACb,OAAO,WAAW,CAAC,EAAE,OAAO,WAAW,CAAC;AACxC,OAAO,WAAW,CAAC,EAAE,KAAK,WAAW,CAAC,EAAE,MAAM,WAAW,CAAC;AAC1D,MAAM,WAAW,CAAC,EAAE,OAAO,WAAW,CAAC,EAAE,KAAK,WAAW,CAAC;AAC1D,KAAK,WAAW,CAAC,EAAE,MAAM,YAAY,CAAC;;AAEtC;EACE,uBAAuB;EACvB,YAAY;EACZ,WAAW;EACX,oBAAoB;EACpB,WAAW;;AAEb;AACA;EACE,kBAAkB;EAClB,aAAa;EACb,kBAAkB;EAClB,uBAAuB;AACzB;AACA;EACE,kBAAkB;EAClB;iBACe;EACf,eAAe;EACf,QAAQ;EACR,kBAAkB;EAClB,UAAU;EACV,yBAAyB;EACzB,qBAAqB;;AAEvB;AACA,iBAAiB,4DAA4D;EAC3E,0BAA0B;;EAE1B,oBAAoB;EACpB,kBAAkB;;;AAGpB;AACA;EACE,gBAAgB;EAChB,UAAU;EACV,sBAAsB;;AAExB;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,kBAAkB;EAClB,iBAAiB;EACjB,oBAAoB;EACpB,kBAAkB;AACpB;AACA;EACE,aAAa;EACb,gBAAgB;;EAEhB,oBAAoB;;EAEpB,YAAY;EACZ,0CAA0C;EAC1C,4BAA4B;EAC5B,iBAAiB;;EAEjB,iBAAiB;EACjB,oCAAoC;EACpC,uBAAuB;AACzB;;AAEA;EACE,gBAAgB;EAChB,YAAY;EACZ,UAAU;;EAEV,YAAY;EACZ,oCAAoC;EACpC,WAAW;EACX,kBAAkB;EAClB,gBAAgB;EAChB,kBAAkB;EAClB,kBAAkB;EAClB,kBAAkB;EAClB,oBAAoB;;;EAGpB,yBAAyB;EACzB,uBAAuB;;EAEvB,gCAAgC;EAChC,gBAAgB;;AAElB;AACA;EACE;IACE,oBAAoB;EACtB;;EAEA;IACE,sBAAsB;EACxB;;EAEA;IACE,oBAAoB;EACtB;AACF;;AAEA,QAAQ,gBAAgB;EACtB,cAAc;EACd,kBAAkB;EAClB,aAAa;EACb,YAAY;EACZ,KAAK;EACL,kBAAkB;EAClB,mBAAmB;;AAErB;AACA;EACE,aAAa;EACb,qBAAqB;EACrB,gBAAgB;EAChB,iBAAiB;EACjB,qBAAqB;AACvB;AACA;EACE,YAAY;EACZ,iBAAiB;EACjB,iBAAiB;EACjB,wCAAwC;AAC1C;AACA;EACE,aAAa;EACb,gBAAgB;EAChB,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB;AACF;AACA;EACE,WAAW;EACX,oBAAoB;EACpB,aAAa;EACb,mCAAmC;EACnC,6CAA6C;EAC7C,iBAAiB;EACjB,gBAAgB;AAClB;AACA;EACE,wBAAwB;EACxB,QAAQ;EACR,mBAAmB;;EAEnB,kBAAkB;EAClB,oBAAoB;AACtB;;AAEA;EACE,yCAAyC;AAC3C;;AAEA,gCAAgC;AAChC,WAAW,eAAe;EACxB,aAAa;EACb,WAAW;EACX,aAAa;EACb,gBAAgB;EAChB;AACF;;AAEA,aAAa,QAAQ;EACnB,aAAa;EACb,aAAa;;EAEb,aAAa;EACb,gBAAgB;AAClB;AACA,sBAAsB,QAAQ;EAC5B,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,aAAa;AACf;AACA;EACE,aAAa;AACf;AACA,YAAY,QAAQ;EAClB,YAAY;EACZ,aAAa;EACb,aAAa;AACf;AACA;EACE,kBAAkB;AACpB;AACA;EACE,kBAAkB;;EAElB,wBAAwB;AAC1B;AACA;EACE,eAAe;EACf,oBAAoB;EACpB,SAAS;EACT,SAAS;AACX;AACA;EACE,aAAa;EACb,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,gBAAgB;EAChB,yBAAyB;AAC3B;AACA;EACE,YAAY;AACd;AACA;EACE,iBAAiB;EACjB,oCAAoC;;EAEpC,WAAW;EACX,mBAAmB;EACnB,YAAY;EACZ,yBAAyB;AAC3B;AACA;EACE,WAAW;;AAEb;AACA;EACE,eAAe;EACf,oCAAoC;AACtC;;AAEA;EACE,aAAa;EACb,gBAAgB;;EAEhB,oBAAoB;;EAEpB,mBAAmB;EACnB,WAAW;;EAEX,qCAAqC;EACrC,mCAAmC;;EAEnC,yBAAyB;EACzB,iBAAiB;;AAEnB;AACA;EACE,uBAAuB;;EAEvB,eAAe;EACf,sCAAsC;EACtC,0BAA0B;AAC5B;AACA;EACE;IACE,iCAAiC;IACjC,YAAY;EACd;EACA;IACE,oCAAoC;IACpC;EACF;EACA;IACE,oCAAoC;IACpC,mBAAmB;EACrB;AACF;AACA;EACE;IACE,oBAAoB;EACtB;EACA;IACE,cAAc;EAChB;AACF",sourcesContent:["@font-face {\n  font-family: 'typeWriter';\n  src: url('./jsImports/externalItems/fonts/Typewriter.otf') format('opentype');\n  font-weight: bolder;\n  font-style: normal;\n}\n:root{\n  margin:0;\n  padding:0;\n  box-sizing: border-box;\n  cursor: crosshair;\n  /* font-family: 'typeWriter'; */\n  font-weight: 100;\n}\nbody{\n  display: grid;\n  grid-template-rows: repeat(3, auto) 3rem;\n  grid-template-columns: auto, min-content;\n  justify-content: center;\n  gap:1vh;\n  font-family: 'typeWriter';\n  background-image: url(./externalItems/oceanHorizon.jpg);\n  background-repeat: no-repeat;\n  background-size: 100%;\n  background-position-y: 50%;\n}\na{\n  grid-row: 1/2;\n  grid-column: 1/2;\n  font-size: 1.2rem;\n  justify-self: center;\n  text-decoration: none;\n  font-family:'typeWriter' ;\n  border: none;\n  background: navy;\n  color:white;\n  border-radius: 15px;\n  padding:.5rem;\n\n}\na:hover{\n  animation: hover .2s ease-in;\n  background: white;\n  color:navy;\n  cursor: pointer;\n}\n\n@keyframes hover{\n  0%{\n    background: navy;\n    color: white\n  }\n  50%{\n    background: rgb(133, 133, 248);\n    color: rgb(182, 182, 250);\n  }\n  100%{\n    background: white;\n    color:navy;\n  }\n}\n.header{\n  grid-row: 1/2;\n  grid-column: 1/3;\n  display: grid;\n  justify-content: center;\n\n  /* background-image: url(./jsImports/externalItems/battleship.jpg); */\n  background-repeat: no-repeat;\n  background-position-y: 15%;\n  \n}\n.header>h1{\n  grid-row: 1/2;\n  grid-column: 1/2;\n  color:rgb(253, 253, 253);\n  margin: 0;\n  align-self: end;\n  justify-self: center;\n  font-family: 'typeWriter';\n}\n.battleshipImg{\n  grid-row: 1/2;\n  grid-column: 1/2;\n  width:50vw;\n  max-width: 600px;\n  z-index: -1000\n}\n#alert{ /* both welcome and alert are different id's for alert window */\n  position:fixed;\n  bottom:50;\n  right: 5vw;\n}\n#welcome,  #openFire{\n  grid-column: 1/3;\n  grid-row: 2/3;\n  text-align: center;\n  animation: expand .5s ease-in; /* keyframes located at bottom */\n}\n#openFire{\n  width: 25vw;\n}\n.alert{\n\n  z-index: 2;\n  border: solid 1px black;\n  background-color:#f6eee3;\n  justify-self: center;\n  align-self: center;\n\n\n  display: grid;\n  grid-template-columns: auto min-content;\n  grid-template-rows:repeat(4, min-content);\n\n  max-width: 40vw;\n  max-height: 45vh;\n  \n  height: fit-content;\n  font-family: 'typeWriter';\n  min-height: fit-content;\n\n\n}\n.admiral{\n  grid-column: 2/3;\n  grid-row: 1/3;\n  height:13rem;\n  width: auto;\n\n}\n.command{\n  grid-row: 1/2;\n  grid-column: 1/2;\n  font-size: 2rem;\n  font-weight: bold;\n  margin-bottom: 0;\n  margin-left: 1rem;\n  justify-self: center;\n  text-align: center;\n}\n.message{\n  grid-column: 1/2;\n  grid-row: 2/3;\n  margin: 0;\n  margin-left: 1rem;\n  margin-right: 1rem;\n  text-align: center;\n  font-size: 1.5rem;\n}\n.hintContainer{\n  width:100%;\n  margin-top:2vh;\n  margin-left: 1vw;\n  display:grid;\n  grid-row: auto;\n  grid-column: auto;\n}\n.hint{\n  grid-row: 1/2;\n  grid-column: 2/3;\n  justify-self: center;\n  margin-left: 1rem;\n  font-size: 1rem;\n  font-weight: bold;\n  align-self: center;\n}\n.mouseIcon{\n  grid-column: 1/2;\n  grid-row: 1/2;\n  width: 5vw;\n  height:auto;\n  border-radius: 15%;\n}\n.okay{\n  grid-row: 5/6; \n  grid-column: 1/3;\n  justify-self: center;\n\n  height: 2.5rem;\n  width: 10rem;\n  font-size: 1.2rem;\n  border-radius: 15px;\n  border: none;\n  background-color: navy;\n  \n  font-family: 'typeWriter';\n  color: white;\n  align-self: end;\n  margin-bottom: 1rem;\n}\n.okay:hover{\n  background-color: rgba(0, 0, 128, 0.605);\n  cursor: pointer;\n}\n.opponentBoard{\n  grid-row: 2/3;\n  grid-column: 1/2;\n  background-image: url(./externalItems/radar.jpeg);\n  background-size: 100%;\n  background-repeat: no-repeat;\n}\n.playerBoardContainer, .opponentBoardContainer{\n\n  display:grid;\n  grid-template-rows: repeat(2, min-content);\n  grid-template-columns: repeat(3, fit-content);\n  /* padding: 20px; */\n  align-self: end;\n}\n.playerBoardContainer{\n  grid-row: 2/3;\n  grid-column: 2/3;\n  padding-right: 5rem\n}\n.opponentBoardContainer{\n  grid-row: 2/3;\n  grid-column: 1/2;\n  margin-left: 1rem;\n}\nh4{\n  grid-row: 1/2;\n  grid-column: 1/3;\n  font-size: 2rem;\n  justify-self: center;\n  margin:5px;\n\n}\n.letterCoordinates{\n  grid-row: 2/3;\n  grid-column: 1/2;\n  display: grid;\n  height:100%;\n  grid-template-rows: repeat(10, auto);\n  gap:0;\n  font-size: 1.5rem;\n}\n.numberCoordinates{\n  grid-row: 3/4;\n  grid-column: 1/3;\n  display: grid;\n  grid-template-columns: repeat(11, auto);\n  font-size: 1.5rem;\n}\n.playerBoard{\n  grid-row: 2/4;\n  grid-column: 2/3;\n  \n  background-image: url(https://images.pexels.com/photos/5326990/pexels-photo-5326990.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1);\n  background-size: 100%;\n}\n.opponentBoard{\n  grid-row: 2/4;\n  grid-column: 2/3;\n \n}\n\n.playerBoard, .opponentBoard{\n  display: grid;\n  grid-template-rows:repeat(10, fit-content);\n  justify-self: end;\n  justify-content: center;\n  gap:0;\n  height: fit-content;\n  width: fit-content;\n\n}\n\n#x{\n  background-color: rgba(255, 0, 0, 0.276);\n}\n\n#row{\n  display: grid;\n  grid-template-columns: repeat(10, auto);\n  gap:0\n}\n/*row is id */\n.nine{ grid-row: 1;} .eight{grid-row: 2;}\n.seven{grid-row: 3;} .six{grid-row: 4;} .five{grid-row: 5;}\n.four{grid-row: 6;} .three{grid-row: 7;} .two{grid-row: 8;}\n.one{grid-row: 9;} .zero{grid-row: 10;}\n\n.cell, .coord{\n  border:solid .1px black;\n  height: 3rem;\n  width: 3rem;\n  justify-self: center;\n  color: none;\n\n}\n.cell{\n  position: relative;\n  display: grid;\n  text-align: center;\n  justify-content: center;\n}\n.marker{\n  position: absolute;\n  /* left:0;\n  bottom: 10px; */\n  font-size: 3rem;\n  margin:0;\n  text-align: center;\n  z-index: 2;\n  transform: rotate(180deg);\n  justify-self: center ;\n\n}\n#markerWithShip{ /* see DOM.js appendMarker() for class marker class switch */\n  transform: rotate(-270deg);\n\n  justify-self: center;\n  align-self: center;\n  \n  \n}\n.cell>.ship{\n  position: static;\n  z-index: 1;\n  background-color: none;\n  \n}\n\n.coord{\n  padding-top: .25vh;\n  border:  none;\n  text-align: center;\n  font-weight: bold;\n  justify-self: center;\n  align-self: center;\n}\n.sideBar{\n  grid-row: 2/3;\n  grid-column: 3/4;\n\n  justify-self: center;\n\n  display:grid;\n  grid-template-rows: repeat(2, fit-content);\n  grid-template-columns: 25rem;\n  margin-left: 20px;\n  \n  font-size: 1.4rem;\n  background-color: rgb(204, 204, 204);\n  border: 2px solid black;\n}\n\n.hitLogShowing{\n  grid-column: 3/4;\n  grid-row:2/4;\n  z-index: 1;\n\n  display:grid;\n  grid-template-rows: min-content 70vh;\n  height:85vh;\n  width: fit-content;\n  min-width: 150px;\n  margin-right: 20px;\n  text-align: center;\n  align-self: center;\n  justify-self: center;\n\n  \n  background-color: #f6eee3;\n  border: 1px solid black;\n  \n  animation: expand 1s ease-in-out;\n  overflow-y: auto;\n\n}\n@keyframes expand{\n  0% {\n    transform: scaleX(0);\n  }\n\n  70% {\n    transform: scaleX(1.1);\n  }\n  \n  100% {\n    transform: scaleX(1);\n  }\n}\n\n.title{ /* for .hitLog */\n  font-size:2rem;\n  text-align: center;\n  grid-row: 1/2;\n  display:none;\n  top:0;\n  padding-left: 3rem;\n  padding-right: 3rem;\n\n}\n.hitLogShowing>.listContainer{\n  grid-row: 2/4;\n  text-decoration: none;\n  list-style: none;\n  font-size: 1.5rem;\n  word-wrap: break-word;\n}\n.list{\n  padding:10px;\n  margin-top:.25rem;\n  font-size: 1.2rem;\n  /* animation: expand .25s ease-in-out; */\n}\n.toggle{\n  grid-row: 1/2;\n  grid-column: 1/3;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 1rem\n}\n.sideBar .ships{\n  width: 8rem;\n  justify-self: center;\n  display: grid;\n  grid-template-rows: repeat(5, 10vh);\n  grid-template-columns: repeat(1, min-content);\n  align-self: start;\n  list-style: none;\n}\n.ships> img{\n  transform: rotate(90deg);\n  margin:0;\n  border-radius: 15px;\n\n  align-self: center;\n  justify-self: center;\n}\n\n.ship:hover{\n  background-color: rgba(16, 0, 241, 0.459);\n}\n\n/* cell height/width = 3.5 rem */\n#carrier{  /* 5:1 height */\n  height: 15rem;\n  width: 3rem;\n  grid-row: 1/2;\n  grid-column: 1/2;\n  background: rgb(255, 0, 0, 0.275)\n}\n\n#battleship{ /*4:1  */\n  height: 12rem;\n  width: 2.7rem;\n\n  grid-row: 2/3;\n  grid-column: 1/2;\n}\n#cruiser, #submarine{ /* 3:1 */\n  height: 9rem;\n  width: 2.3rem;\n}\n\n#submarine{\n  grid-row: 3/4;\n}\n#cruiser{\n  grid-row: 4/5;\n}\n#destroyer{ /* 2:1 */ \n  height: 6rem;\n  width: 1.7rem;\n  grid-row: 5/6;\n}\n.cell>#destroyer{\n  padding-left: 1rem;\n}\n.cell>.ship{\n  padding-left: 1rem;\n\n  /* margin-left: .5rem; */\n}\n#bottomBtn{\n  align-self: top;\n  justify-self: center;\n  width:30%;\n  padding:0;\n}\n.startGame{\n  grid-row: 4/5;\n  grid-column: 1/2;\n}\n\n.resetPieces{\n  grid-row: 4/5;\n  grid-column: 2/3;\n  /* justify-self: start; */\n}\n.resetPieces{\n  padding:1rem;\n}\n.startGame, .resetPieces, .orient{\n  font-size: 1.5rem;\n  background-color: rgb(255, 255, 255);\n\n  border:none;\n  border-radius: 15px;\n  width: 12rem;\n  font-family: 'typeWriter';\n}\n.orient{\n  width: 9rem;\n \n}\n.startGame:hover, .resetPieces:hover, .orient:hover{\n  cursor: pointer;\n  background-color: rgb(183, 182, 182);\n}\n\n.playAgain{\n  grid-row: 4/5;\n  grid-column: 1/3;\n\n  justify-self: center;\n\n  border-radius: 15px;\n  width:12rem;\n  \n  animation: colorChange 3s ease-in-out;\n  animation-iteration-count: infinite;\n\n  font-family: 'typeWriter';\n  font-size: 1.5rem;\n\n}\n.playAgain:hover{\n  background-color: white;\n  \n  cursor: pointer;\n  border: 1.5px solid rgb(109, 109, 109);\n  transition: border.5s ease;\n}\n@keyframes colorChange {\n  0%{\n    background-color: rgb(0, 71, 133);\n    color: white;\n  }\n  50%{\n    background-color: rgb(131, 197, 255);\n    color: rgb(77, 76, 76)\n  }  \n  100%{\n    background-color: rgb(255, 255, 255);\n    color: rgb(0, 0, 0);\n  }\n}\n@keyframes slide{\n  0%{\n    margin-right: -100vw;\n  }\n  100%{\n    margin-right:0;\n  }\n}\n\n\n"],sourceRoot:""}]);const m=h},314:e=>{"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,i,o){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(a[s]=!0)}for(var l=0;l<e.length;l++){var d=[].concat(e[l]);r&&a[d[0]]||(void 0!==o&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=o),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),i&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=i):d[4]="".concat(i)),n.push(d))}},n}},417:e=>{"use strict";e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},354:e=>{"use strict";e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(i," */");return[n].concat([o]).join("\n")}return[n].join("\n")}},72:e=>{"use strict";var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},a=[],A=0;A<e.length;A++){var s=e[A],l=r.base?s[0]+r.base:s[0],d=o[l]||0,c="".concat(l," ").concat(d);o[l]=d+1;var h=t(c),g={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==h)n[h].references++,n[h].updater(g);else{var p=i(g,r);r.byIndex=A,n.splice(A,0,{identifier:c,updater:p,references:1})}a.push(c)}return a}function i(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,i){var o=r(e=e||[],i=i||{});return function(e){e=e||[];for(var a=0;a<o.length;a++){var A=t(o[a]);n[A].references--}for(var s=r(e,i),l=0;l<o.length;l++){var d=t(o[l]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}o=s}}},659:e=>{"use strict";var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},540:e=>{"use strict";e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{"use strict";e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,i&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{"use strict";e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},408:(e,n,t)=>{const{GameBoard:r}=t(918),i=t(186),o=t(994);e.exports=class{constructor(){this.player1=new r("playerCell"),this.player2=new r("opponentCell"),this.body=[],this.alert=new i,this.currentPlayer=this.player1,this.attackedPlayer=this.player2,this.sideBarList=document.querySelector("ul"),this.sideBarShips=document.querySelectorAll(".ship"),this.ship=this.currentPlayer.carrier,this.orient="x",this.validArray=[],this.count=0,this.search=new o(this.player1.sunk),this.winner=!1}originalInnerHTML(e){for(let n=0;n<e.childElementCount;n++)this.body.push(e.children[n].cloneNode(!0))}allShipsPlaced(){return 0===this.currentPlayer.shipsArray.length}auditRange(){if(null!==this.validArray[this.validArray.length-1])return!0}auditCellOccupied(e=this.validArray){for(let n=0;n<e.length;n++){let t=e[n];try{if(!1!==this.currentPlayer.board[t].occupied)return!1}catch(e){if(e instanceof TypeError)continue}}return!0}cellAuditColoration(){document.querySelector(".playerBoard").querySelectorAll(".cell").forEach((e=>{e.style.background=this.currentPlayer.board[e.value].background,0!==this.validArray.length?this.validArray.includes(e.value)&&(!0===this.auditRange()&&!0===this.auditCellOccupied()?e.style.background="rgba(0, 128, 0, 0.479)":e.style.background="rgba(255, 0, 0, 0.384)"):e.style.background="none"}))}createBoard(e,n,t){let r=document.createElement("div");r.className=n;let i=["zero","one","two","three","four","five","six","seven","eight","nine"];for(let e=0;e<10;e++){let n=document.createElement("div");n.className=i[e],n.id="row";for(let r=0;r<10;r++){let i=document.createElement("div");i.value=`${r},${e}`,i.className="cell",i.id=t,n.appendChild(i)}r.appendChild(n)}return e.appendChild(r)}defaultShipSelector(){let e=this.currentPlayer.shipsArray;if(e.length>0){let n=e[0].name;this.selectShip(n),this.selectedShipIndicator(document.querySelector(`#${n}`))}}resetSideBar(){this.sideBarList.innerHTML="";let e=["carrier","battleship","submarine","cruiser","destroyer"];for(let n=0;n<5;n++){let t=document.createElement("img");t.src=`./externalItems/shipSprites/${e[n]}.png`,t.id=e[n].toLocaleLowerCase(),t.className="ship",this.sideBarList.append(t)}return this.sideBarShips=this.updateSideBarShips(void 0,"reset"),this.sideBarList}setShipColoration(e=this.validArray){return document.querySelector(".opponentBoard").querySelectorAll(".cell").forEach((n=>{e.includes(n.value)&&(n.style.background=this.player2.board[n.value].background)})),this.currentPlayer}setShipImg(e){e.style.background="none";let n=this.ship,t=document.createElement("img");t.src=`./externalItems/shipSprites/${n.name}.png`,t.id=n.name,t.className="ship",t.style.transformOrigin="top",t.style.background="none",t.style.zIndex=0,"x"===this.orient?(t.style.transform="rotate(-90deg)",t.style.marginTop="30px",t.style.marginLeft="-50px",t.style.position="static",t.style.bottom="0px"):e.style.transform="rotate(180deg)",e.appendChild(t),e.style.textAlign="center"}selectShip(e){return this.ship=this.currentPlayer[e]}selectedShipIndicator(e){document.querySelectorAll(".ship").forEach((e=>{e.style.background="none"})),e.style.background="rgb(255, 0, 0, 0.275)"}shadeOrientButton(e){document.querySelectorAll(".orient").forEach((e=>e.style.background="white")),document.querySelector(`#${e}`).style.background="rgba(255, 0, 0, 0.276)"}trimSideBar(){let e=document.querySelector(`#${this.ship.name}`);return this.sideBarList.removeChild(e),this.count+=1,this.sideBarShips=this.updateSideBarShips(e)}updateOrient(e){this.shadeOrientButton(e),this.orient=e}updateValidArray(e){return this.validArray=this.currentPlayer.validPlacement(this.ship,e,this.orient)}updateSideBarShips(e,n="trim"){let t=[];return"reset"===n?t=document.querySelectorAll(".ship"):this.sideBarShips.forEach((n=>{n.id!==e.id&&t.push(n)})),t}auditComputerPlacement(){let e,n={x:0,y:1}[this.orient];e=0===n?1:0;let t=[this.prepAdjacentCoords(0,n,-1),this.prepAdjacentCoords(this.validArray.length-1,n,1)];for(let n=0;n<this.validArray.length;n++){let r=this.prepAdjacentCoords(n,e,-1),i=this.prepAdjacentCoords(n,e,1);t.push(r,i)}if(!0===this.auditCellOccupied(t))return!0}prepAdjacentCoords(e,n,t){let r,i=this.validArray[e].replace(",",""),o=i[n],a=(parseInt(o)+t).toString();r=0===n?1:0;let A=i[r];return n<r?`${a},${A}`:`${A},${a}`}randomizeCoordinates(){let e=[];for(let n=0;n<2;n++){let n=Math.floor(10*Math.random());e.push(n)}return`${e[0]},${e[1]}`}randomizeOrientation(){let e=Math.floor(2*Math.random());return this.orient=["x","y"][e]}randomShipSet(){if(!0===this.allShipsPlaced())return;this.orient=this.randomizeOrientation();let e=this.randomizeCoordinates();this.updateValidArray(e),!0===this.auditRange()&&!1!==this.auditCellOccupied()&&this.auditComputerPlacement()&&(this.currentPlayer.setShip(this.ship,this.validArray,this.orient),this.setShipColoration(),this.currentPlayer.trimShipsArray(this.ship),this.defaultShipSelector()),this.randomShipSet()}attackHandling(e,n){let t=n.receiveAttack(e),r=document.createElement("p");if(r.className="marker",r.textContent="x","miss"===t)r.style.color="white";else if("hit"===t&&(!0===this.search.huntingShip&&this.search.hitCount++,r.style.color="red",this.search.auditHitLogLength(),"opponentCell"===n.playerType)){let t=n.board[e].occupied,r=t.name;!1===t.sunk?this.alert.appendHitLog(r,"Hit","black"):this.alert.appendHitLog(r,"Sunk","red")}return r}winnerFound(){let e=0,n=0,t=["carrier","battleship","cruiser","submarine","destroyer"];for(let r=0;r<5;r++){let i=t[r];!0===this.player1[i].sunk&&e++,!0===this.player2[i].sunk&&n++}return 5===e?this.winner="computer":5===n&&(this.winner="player"),this.winner}accessCell(e){return this.attackedPlayer.board[e]}appendMarker(e,n){document.querySelectorAll("#playerCell").forEach((t=>{t.value===e&&(t.childElementCount>0&&"rotate(270deg)"===t.style.transform&&(n.id="markerWithShip"),t.appendChild(n))}))}sweepSearch(){let e=this.search.pattern.coord,n=this.player1.board[e];if(void 0===n||!0===n.selected)this.coordinateAdding(),this.handleCompSearch();else{let t=this.attackHandling(e,this.player1);if(this.appendMarker(e,t),!1!==n.occupied)return this.resetSearchData(n.coordinates),this.search.targetShip=n.occupied,this.search.huntingShip=!0;this.coordinateAdding()}}coordinateAdding(){this.auditSearchGap(),this.search.changeCoordAdder(),!1===this.search.checkRange()&&this.search.addNextOrigin()}resetSearchData(e){this.search.hitSearch=["up","down","left","right"],this.search.firstHit=e,this.search.lastHit=e}hitSearch(e){let n=this.player1.board;try{if(!1===this.search.huntingShip)return void this.handleCompSearch();let t=this.search.hitSearch[0];if(e=n[e][t].toString(),!1===n[e].selected){let t=this.attackHandling(e,this.player1);if(this.appendMarker(e,t),!1!==n[e].occupied&&!0===this.search.compareAttacks(n[e]))return this.search.lastHit=e}else!0===n[e].selected&&(this.updateHitSearch(),this.initialCoord(),this.handleCompSearch())}catch(e){e instanceof TypeError&&(this.updateHitSearch(),this.search.lastHit=this.initialCoord(),this.handleCompSearch())}}handleCompSearch(){console.log("handleCompSearch"),this.search.monitorTarget(),5!==this.player1.sunk.length&&(!1===this.search.huntingShip?this.sweepSearch():this.hitSearch(this.search.lastHit))}auditSearchGap(){let e=this.search.sunk;e=e.sort(((e,n)=>e.length-n.length));let n=2;0!==e.length&&"destroyer"===e[0].name&&(n=3,e.length>=3&&3===e[1].length&&3===e[2].length&&(n=4,e.length>=4&&4===e[3].length&&(n=5)),this.search.changeGap(n),this.search.updateSearchInfo())}toggleTurn(){return this.currentPlayer===this.player1?(this.currentPlayer=this.player2,this.attackedPlayer=this.player1):this.currentPlayer===this.player2?(this.currentPlayer=this.player1,this.attackedPlayer=this.player2):void 0}initialCoord(){return this.search.lastHit=this.search.firstHit.toString()}updateHitSearch(){return this.search.hitSearch.splice(0,1)}resetDOM(){let e=document.querySelector("body");e.innerHTML="";for(let n=0;n<this.body.length;n++)e.append(this.body[n])}changeBackground(){let e=this.player2.board,n=[];for(const t in e)!1!==e[t].occupied&&(e[t].background="gray",n.push(e[t].coordinates.toString()));return this.setShipColoration(n),e}}},186:e=>{e.exports=class{constructor(){this.alert=document.querySelector(".alert"),this.hitLog=document.querySelector(".hitLog"),this.admiral=this.admiralInfo(),this.command=this.commandInfo(),this.message=this.messageInfo(),this.button=this.buttonInfo()}admiralInfo(){let e=document.createElement("img");return e.className="admiral",e.src="./externalItems/admiral.jpeg",e}commandInfo(){let e=document.createElement("p");return e.textContent="Message From High Command:",e.className="command",e}messageInfo(){let e=document.createElement("p");return e.className="message",e}buttonInfo(){let e=document.createElement("button");return e.className="okay",e}displayHitLog(){return document.querySelector(".title").style.display="block",this.hitLog.className="hitLogShowing"}welcome(){this.message.textContent="Captain, position your fleet and prepare to fire!";let e=document.createElement("div");e.className="hintContainer";let n=document.createElement("p");n.textContent="Hint: You can toggle your ship from horizontal to vertical by clicking the scroll button on your mouse while hovering over the grid.",n.className="hint";let t=document.createElement("img");return t.className="mouseIcon",t.src="./externalItems/mouse.jpeg",e.append(n,t),this.button.textContent="Okay",this.alert.append(this.command,this.message,this.admiral,e,this.button),this.alert.id="welcome",this.alert}openFire(){this.alert.id="welcome",this.alert.style.display="grid";let e=this.commandInfo();this.message.textContent="Open Fire!",this.alert.append(this.message,e,this.admiral),this.timeout(1)}result(e){let n=document.createElement("h2");n.style.fontSize="2rem","player"===e?(n.textContent="Victory!",this.message.textContent="We have won! You truly are a master of the seas."):(n.textContent="Defeat",this.message.textContent="We may have lost the battle, but we will never lose the war. "),this.message.style.padding="1rem",this.alert.append(n,this.message,this.admiral),this.alert.id="welcome",this.showAlert()}hide(){this.alert.innerHTML="",this.alert.style.display="none",this.alert.id="alert"}showAlert(){this.alert.style.display="grid"}appendHitLog(e,n,t){let r=document.querySelector(".listContainer"),i=document.createElement("p");i.className="list",i.textContent=`${n}: ${e}`,i.style.color=t,r.appendChild(i),this.hitLog.scrollTop=r.scrollHeight}playAgain(){let e=document.createElement("button");e.className="playAgain",e.textContent="Play Again",document.querySelector("body").appendChild(e)}openFire(){let e=document.createElement("h2");e.textContent="Message From High Command:",this.message.textContent="Open Fire!",this.alert.append(e,this.message,this.admiral),this.alert.id="openFire",this.alert.style.display="grid"}timeout(e){setTimeout((()=>{this.hide()}),e)}}},918:(e,n,t)=>{const r=t(52).Ship;e.exports={GameBoard:class{constructor(e){this.board=this.createGraph(),this.playerType=e,this.carrier=new r(5,"carrier"),this.battleship=new r(4,"battleship"),this.cruiser=new r(3,"cruiser"),this.submarine=new r(3,"submarine"),this.destroyer=new r(2,"destroyer"),this.shipsArray=[this.carrier,this.battleship,this.cruiser,this.submarine,this.destroyer],this.sunk=[]}createGraph(){this.board={};for(let e=0;e<10;e++)for(let n=0;n<10;n++){let t=[n,e].toString(),r=this.surroundingCoords(n,e);this.board[t]={coordinates:[n,e],up:r[0],down:r[1],left:r[2],right:r[3],occupied:!1,selected:!1,background:"none"}}return this.board}resetShipsArray(){return this.shipsArray=[this.carrier,this.battleship,this.cruiser,this.submarine,this.destroyer]}setShip(e,n,t="x"){let r;r="x"===t?"right":"up";let i=n[0],o=this.board[i].coordinates;for(let t=0;t<e.length;t++)this.board[o].occupied=e,o=this.board[o][r],i=n[t],o=this.board[i][r];return this.board}surroundingCoords(e,n){let t=[e,n+1],r=[e,n-1],i=[e-1,n],o=[e+1,n];n>8?t=null:n<1&&(r=null),e>8?o=null:e<1&&(i=null);let a=[];return a.push(t,r,i,o),a}trimShipsArray(e){let n=this.shipsArray.indexOf(e);return this.shipsArray.splice(n,1)}validPlacement(e,n,t){let r=n;"object"==typeof n&&(r=n.value);let i=this.board[r],o=[],a="right";"y"===t&&(a="up");for(let n=0;n<e.length;n++){if(o.push(`${i.coordinates}`),null===i[a]){o.length<e.length&&o.push(i[a]);break}i=this.board[i[a]]}return o}receiveAttack(e){if(!1===this.board[e].selected)return this.changeSelected(this.board[e]),!1!==this.board[e].occupied?(this.board[e].occupied.hit(),"hit"):"miss"}changeSelected(e){return e.selected=!0}}}},994:e=>{e.exports=class{constructor(e){this.sunk=e,this.gap=2,this.origin=this.randomizeOrigin(),this.pattern=this.searchInfo(),this.firstHit="",this.lastHit="",this.targetShip=void 0,this.hitLog=[],this.hitCount=0,this.missCount=0,this.hitSearch=["up","down","left","right"],this.huntingShip=!1}searchInfo(){return{one:{start:"0,1",addToStart:[0,this.gap],addToHalfway:[this.gap,0],coord:"0,1",addToCoord:[1,-1]},two:{start:"8,9",addToStart:[-this.gap,0],addToHalfway:[0,-this.gap],coord:"8,9",addToCoord:[1,-1]},three:{start:"0,9",addToStart:[this.gap,0],addToHalfway:[0,this.gap],coord:"0,9",addToCoord:[1,-1]},four:{start:"0,9",addToStart:[0,-this.gap],addToHalfway:[-this.gap,0],coord:"0,9",addToCoord:[1,-1]}}[this.origin]}randomizeOrigin(){return["one","two","three","four"][Math.floor(4*Math.random())]}updateSearchInfo(){"two"!==this.origin&&"four"!==this.origin||(this.gap*=-1);for(let e=0;e<this.pattern.addToStart.length;e++)0!==this.pattern.addToStart[e]&&(this.pattern.addToStart[e]=this.gap),0!==this.pattern.addToHalfway[e]&&(this.pattern.addToHalfway[e]=this.gap)}addNextOrigin(){let e=this.pattern.addToStart,n=this.pattern.start.split(","),t=parseInt(n[0])+e[0],r=parseInt(n[1])+e[1];return"three"===this.origin&&(t>9&&r>=7||t>9&&r<0)?(t=0,r=-1+this.gap,this.pattern.addToStart=this.pattern.addToHalfway):"four"===this.origin&&r<0&&0===t&&(t=10-Math.abs(this.gap),r=9,this.pattern.addToStart=this.pattern.addToHalfway),this.pattern.start=`${t},${r}`,this.pattern.coord=this.pattern.start,this.pattern}changeCoordAdder(){let e=this.pattern.addToCoord,n=this.pattern.coord.split(","),t=parseInt(n[0])+e[0],r=parseInt(n[1])+e[1];return this.pattern.coord=`${t},${r}`}checkRange(){let e=parseInt(this.pattern.coord.split(",")[0]),n=parseInt(this.pattern.coord.split(",")[1]);return"one"===this.origin&&(10===e||n>9)&&(this.pattern.addToStart=this.pattern.addToHalfway),"two"===this.origin&&-1===e&&(this.pattern.addToStart=this.pattern.addToHalfway),"three"===this.origin&&e>9&&n>=7&&(this.pattern.addToStart=this.pattern.addToHalfway,this.pattern.start="0,-1",this.pattern.coord="0,-1"),"four"===this.origin&&n<0&&2===e&&(this.pattern.addToStart=this.pattern.addToHalfway,this.pattern.start="11,9",this.pattern.coord="11,9"),"one"===this.origin||"two"===this.origin?!(n<0||10===e):!(n<0||n>9||e<0||e>9)}changeGap(e){return this.gap=e}multipleShips(){if(this.missCount>1&&this.hitCount>1)return this.multiShips=!0}trimHitLog(){return this.hitLog.splice(0,1)}prepShipInfo(){this.firstHit=this.hitLog[0].coordinates,this.lastHit=this.firstHit,this.targetShip=this.hitLog[0].occupied,this.hitSearch=["up","down","left","right"]}auditHitLogLength(){if(0===this.hitLog.length)return this.hitCount=0,this.multiShips=!1}updateAttackCounts(e,n){"playerCell"===n.playerType&&("hit"===e?this.hitCount++:this.missCount++)}compareAttacks(e){return this.targetShip.name===e.occupied.name||(this.pushHitLog(e),!1)}pushHitLog(e){return this.hitLog.push(e),this.hitLog}monitorTarget(){void 0!==this.targetShip&&!0===this.targetShip.sunk&&(this.updateSunk(),0===this.hitLog.length?(this.huntingShip=!1,this.hitLog=[],this.targetShip=void 0):(this.prepShipInfo(),this.trimHitLog()))}updateSunk(){return this.sunk.push(this.targetShip),this.sunk}}},52:e=>{class n{constructor(e,n){this.length=e,this.name=n,this.hits=0,this.sunk=!1}hit(){return this.hits+=1,this.hits===this.length&&this.isSunk(),this.hits}isSunk(){if(this.length===this.hits)return this.sunk=!0}}let t=new n(5);t.hits=5;let r=new n(3).hit();e.exports={Ship:n,sunkShip:t,notSunkShip:r}},973:(e,n,t)=>{"use strict";e.exports=t.p+"1378617ded78a64cbc02.jpg"},270:(e,n,t)=>{"use strict";e.exports=t.p+"20eb4c6c687d310736b2.jpeg"},737:(e,n,t)=>{"use strict";e.exports=t.p+"8c596fe91257768bc254.otf"}},n={};function t(r){var i=n[r];if(void 0!==i)return i.exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");if(r.length)for(var i=r.length-1;i>-1&&(!e||!/^http(s?):/.test(e));)e=r[i--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{"use strict";var e=t(72),n=t.n(e),r=t(825),i=t.n(r),o=t(659),a=t.n(o),A=t(56),s=t.n(A),l=t(540),d=t.n(l),c=t(113),h=t.n(c),g=t(208),p={};p.styleTagTransform=h(),p.setAttributes=s(),p.insert=a().bind(null,"head"),p.domAPI=i(),p.insertStyleElement=d(),n()(g.A,p),g.A&&g.A.locals&&g.A.locals;const u=t(408);function m(e="firstGame"){let n=document.querySelector("body"),t=new u;t.originalInnerHTML(n);let r=document.querySelector(".opponentBoardContainer");t.createBoard(r,"opponentBoard","opponentCell");let i=document.querySelector(".playerBoardContainer");if(t.createBoard(i,"playerBoard","playerCell"),"firstGame"===e){t.alert.welcome();let e=()=>{t.alert.hide(),C(t,i,r),n.removeEventListener("click",e)},n=document.querySelector(".okay");n.addEventListener("click",e)}else C(t,i,r)}function C(e,n,t){let r=document.querySelector(".ships");r.addEventListener("click",(n=>{let t=n.target;"ship"===t.className&&(e.selectShip(t.id),e.selectedShipIndicator(t,r))})),document.querySelector("#y").addEventListener("click",(()=>{e.updateOrient("y")})),document.querySelector("#x").addEventListener("click",(()=>{e.updateOrient("x")}));let i=n=>{if(r.childElementCount>0){let t=n.target;"ship"===t.className&&(t=t.parentElement),"cell"===t.className?"cell"===t.className&&e.updateValidArray(t):e.validArray=[],e.cellAuditColoration()}};n.addEventListener("mouseover",i);let o=document.querySelector(".playerBoardContainer");o.addEventListener("mousedown",(n=>{if(!1===e.allShipsPlaced()&&1===n.button){let t;t="x"===e.orient?"y":"x";let r=n.target;"ship"===n.target.className&&(r=n.target.parentElement),e.updateOrient(t),e.updateValidArray(r),e.cellAuditColoration()}}));let a=n=>{let t=n.target;"cell"===t.className&&!0===e.auditRange()&&!0===e.auditCellOccupied()&&(e.currentPlayer.setShip(e.ship,e.validArray,e.orient),e.trimSideBar(),e.currentPlayer.trimShipsArray(e.ship),e.setShipImg(t),!0===e.allShipsPlaced()&&(e.validArray=[]),e.cellAuditColoration(),e.defaultShipSelector())};o.addEventListener("click",a);let A=()=>{let n=document.querySelector(".playerBoard");o.removeChild(n),e.createBoard(o,"playerBoard","playerCell"),e.player1.createGraph(),e.resetSideBar(),e.currentPlayer.resetShipsArray(),e.defaultShipSelector()},s=document.querySelector(".resetPieces");s.addEventListener("click",A);let l=document.querySelector(".startGame");l.addEventListener("click",(()=>{0===r.childElementCount&&(o.removeEventListener("click",a),o.removeEventListener("mouseover",i),s.removeEventListener("click",A),e.alert.displayHitLog(),function(e,n,t){t=function(e){e.toggleTurn();let n=document.querySelector(".opponentBoardContainer");return e.defaultShipSelector(),e.randomShipSet(),e.currentPlayer=e.player1,e.toggleTurn(),n}(e),e.alert.openFire(),e.alert.timeout(1500),e.currentPlayer=e.player1,e.attackedPlayer=e.player2;let r=n=>{let i=n.target,o=e.player2.board[i.value];try{if(e.currentPlayer===e.player1&&!1===o.selected&&"opponentCell"===i.id&&"cell"===i.className){let n=e.attackHandling(i.value,e.player2);if(i.appendChild(n),!1!==e.winnerFound())return t.removeEventListener("click",r),void B(e);e.toggleTurn(),setTimeout((()=>{if(e.handleCompSearch(),!1!==e.winnerFound())return t.removeEventListener("click",r),void B(e)}),250),e.toggleTurn()}}catch(e){if(console.log(e),e===TypeError)return}};t.addEventListener("click",r)}(e,0,t),l.style.display="none",s.style.display="none",document.querySelector(".sideBar").style.marginRight="-100vw")}))}function B(e){e.alert.result(e.winner),e.changeBackground(),e.setShipColoration(),e.alert.timeout(3e3),e.alert.playAgain(),document.querySelector(".playAgain").addEventListener("click",(()=>{e.resetDOM(),m("new game")}))}console.trace(),m()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,